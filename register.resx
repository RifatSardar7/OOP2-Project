<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>